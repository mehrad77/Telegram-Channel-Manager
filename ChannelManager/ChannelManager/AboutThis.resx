<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAB
        AwAAAQMB4GlWSgAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAK4SURBVFhHtdc7
        a1RRFAXgnSdBsdciiBiTKFgo8QfEBANpJIgRQcEuRG2tBRUEbWxESBXFFBaKYJ1CUawE341W2ijY+cbH
        uNb17LDm3H3HyR1z4CMz+5y99pCZO7mxRqPRNqxeGIZ9MAfnEz5mjXu9UW+VsJjDGoRz8A5YaIVneHYw
        ysqFRYc1CrfhJ+iQdrCHvaNRtguLhDULH0FD62DGbDSDygWzPrgEGvI/MLOvNK9UMFtKDWthqTSv6YnZ
        vBxeK/NNM2X4GHxLh9xZ4AfxCDxKtXY8gaPAy/JMqjnOGGt6AVg98Ar0IE34wXSOH8wrcAoOwK6Ej1nj
        3qGsZwI0kzirp9hPh2bSRm5Yw+pghuSpmWI/HVqWDbVfw+pghuSp5bRvO1IhMp4HrhbWXsnLcbadloK6
        HgXWgXVDchVn21UpqI7ff4e1U3IVZ9s9KbjP0B2F1YHFq+wr5HM4295IwT2NgjrBTMl3b8G+SMG9j0I6
        wUzJd5xtL6SgNkRBdTBLctVzsFtSUHuisDqYJbnqJhS3VNHmYhRWB7MkV3G2HZOC4h3NtihwNZiRsvJ8
        4mwbgV+pkOMVsjsKbgd7U0aeS5w54gf1JuQ+PJDn/KRegC35gCpYW+EiRFeYK25OvGEIfqSNO7AODoL+
        6viKX8I1KH1JYXUB/xzzzG/wvghnDRV9ErCQNukudEP0+bjsPTmsE3KulYWVHmnmvT+/gv3QXKofh9fw
        CR7CZu/JYW0H76/CGSv/M+QBk+Df2R9gk+7/C9b61FuF2ZNNPfqkKJhNgd8b8pvqMGyE/vSzK+9xWAPA
        BxFmTpV68kJRNJuG76ABbiDqIe7JOcWs6bAnKhLWODwGDaLVvgBmVN5ZhUWHxUuLd7zPwAP7o7PEPTnH
        HvZWvmUUFnMMAd6Sn4z2FRavGp5tOfivhv0BoCpLBDOr0z0AAAAASUVORK5CYII=
</value>
  </data>
  <data name="label5.Text" xml:space="preserve">
    <value>This program will connect to your Telegram Channel with a Bot API
and send/Manage your channel. It also support styling your messages
with HTML tags.
You can find a tutorial in Help menu.

I would be grateful if you help me in developing this program. You can
do that in Project Github</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAMAAABEpIrGAAAABGdBTUEAALGPC/xhBQAAARdQTFRFYaje
        YqjeYqneY6neY6nfZKrfZ6vfaKzgaq3ga63gbK7gb7DhcrHhdLLidbPidrTierbjfLfkfrjkf7jkgLnk
        gbrlhLvlhbzmhrzmib7mjcDnjsHnkMLokcPok8PolMTplsXpl8bpmMbpmMbqmcfqm8jqnMnqn8rroMrr
        oszspM3sps7sqdDtrtLur9PusNPusdTvstTvtdbvt9fwuNjwudjwvdvxv9zywN3yw97yxN/zxuDzx+Dz
        y+L0z+T10eX10ub21ej21+n32Or32uv33Oz44e754e/54u/54/D55vH66fP66/T77PT77PX77fX78ff8
        8vj88/j88/n99vr9+Pv++fz++vz+/f7+/f7//v7//v//////A5rdZgAAAAlwSFlzAAAA+QAAAPkBHYYE
        gQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAEPSURBVDhP5ZLpNsNgFEVvUy2i
        RQ0V86yoeSoaFEVRLUoJ5/2fwzccmlg8gGX/SE7OTrJu7or8a5yRo7tp5h9Ir9cAHPDqO4nJ0pvSQJ5F
        lN7tB+Xub9RhiFWI5EJZP/peGH0EXpNsvxgsPGmNSna8qU5XrIm7XDEWzyttS4EO+zSa2LD/YixwnI5t
        2ZSjVHi3tgLqE5IoMvfRKnLmlUCw0y4dpzajGafVuLN+A7jsF0lxEqBM90ncu5gSydSpgV2KFvN7krXf
        aZhh3cKtik+p6WEd4nzA7NHSYBkmv6EmOFHTakosw3RXAxw6qTNzwybLCNcoOupfWdVrGWMXIbNol+PV
        EHSZ9Buda3NMfwKRD4PQTQCXD26OAAAAAElFTkSuQmCC
</value>
  </data>
</root>